"use strict";(self.webpackChunk_ima_docs=self.webpackChunk_ima_docs||[]).push([[7300],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(r),m=a,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3784:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=r(5773),a=(r(7294),r(3905));const o={id:"ima_core.RouterEvents",title:"Enumeration: RouterEvents",sidebar_label:"@ima/core.RouterEvents",custom_edit_url:null},i=void 0,l={unversionedId:"api/enums/ima_core.RouterEvents",id:"api/enums/ima_core.RouterEvents",title:"Enumeration: RouterEvents",description:"@ima/core.RouterEvents",source:"@site/../docs/api/enums/ima_core.RouterEvents.md",sourceDirName:"api/enums",slug:"/api/enums/ima_core.RouterEvents",permalink:"/api/enums/ima_core.RouterEvents",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"ima_core.RouterEvents",title:"Enumeration: RouterEvents",sidebar_label:"@ima/core.RouterEvents",custom_edit_url:null},sidebar:"api",previous:{title:"@ima/core.RouteNames",permalink:"/api/enums/ima_core.RouteNames"},next:{title:"@ima/core.StateEvents",permalink:"/api/enums/ima_core.StateEvents"}},s={},u=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"AFTER_HANDLE_ROUTE",id:"after_handle_route",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"AFTER_LOADING_ASYNC_ROUTE",id:"after_loading_async_route",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"BEFORE_HANDLE_ROUTE",id:"before_handle_route",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"BEFORE_LOADING_ASYNC_ROUTE",id:"before_loading_async_route",level:3},{value:"Defined in",id:"defined-in-3",level:4}],p={toc:u},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/api/modules/ima_core"},"@ima/core"),".RouterEvents"),(0,a.kt)("p",null,"Events constants, which is firing to app."),(0,a.kt)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,a.kt)("h3",{id:"after_handle_route"},"AFTER","_","HANDLE","_","ROUTE"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"AFTER","_","HANDLE","_","ROUTE")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"$IMA.$Router.afterHandleRoute"')),(0,a.kt)("p",null,"Router fire event ",(0,a.kt)("inlineCode",{parentName:"p"},"$IMA.$Router.afterHandleRoute")," after page\nmanager handle the route. Event's data contain\n",(0,a.kt)("inlineCode",{parentName:"p"},"{response: Object<string, *>, params: Object<string, string>"),",\nroute: ima.core.router.AbstractRoute, path: string, options: Object<string, *>}}.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"response")," is page render result. The ",(0,a.kt)("inlineCode",{parentName:"p"},"path")," is current\npath, the ",(0,a.kt)("inlineCode",{parentName:"p"},"params")," are params extracted from path, the\n",(0,a.kt)("inlineCode",{parentName:"p"},"route")," is handle route for path and the ",(0,a.kt)("inlineCode",{parentName:"p"},"options")," is route\nadditional options."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/crysadrak/ima/blob/fb424e0/packages/core/src/router/RouterEvents.ts#L26"},"packages/core/src/router/RouterEvents.ts:26")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"after_loading_async_route"},"AFTER","_","LOADING","_","ASYNC","_","ROUTE"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"AFTER","_","LOADING","_","ASYNC","_","ROUTE")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"$IMA.$Router.afterLoadingAsyncRoute"')),(0,a.kt)("p",null,"Event fired when router finishes loading of async view\nand controller. If both are sync this is never fired."),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/crysadrak/ima/blob/fb424e0/packages/core/src/router/RouterEvents.ts#L38"},"packages/core/src/router/RouterEvents.ts:38")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"before_handle_route"},"BEFORE","_","HANDLE","_","ROUTE"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"BEFORE","_","HANDLE","_","ROUTE")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"$IMA.$Router.beforeHandleRoute"')),(0,a.kt)("p",null,"Router fire event ",(0,a.kt)("inlineCode",{parentName:"p"},"$IMA.$Router.beforeHandleRoute")," before page\nmanager handle the route. Event's data contain\n",(0,a.kt)("inlineCode",{parentName:"p"},"{ params: Object<string, string>"),", route: ima.core.router.AbstractRoute,\npath: string, options: Object<string, *>}}. The ",(0,a.kt)("inlineCode",{parentName:"p"},"path")," is current\npath, the ",(0,a.kt)("inlineCode",{parentName:"p"},"params")," are params extracted from path, the\n",(0,a.kt)("inlineCode",{parentName:"p"},"route")," is handle route for path and the ",(0,a.kt)("inlineCode",{parentName:"p"},"options")," is route\nadditional options."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/crysadrak/ima/blob/fb424e0/packages/core/src/router/RouterEvents.ts#L14"},"packages/core/src/router/RouterEvents.ts:14")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"before_loading_async_route"},"BEFORE","_","LOADING","_","ASYNC","_","ROUTE"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"BEFORE","_","LOADING","_","ASYNC","_","ROUTE")," = ",(0,a.kt)("inlineCode",{parentName:"p"},'"$IMA.$Router.beforeLoadingAsyncRoute"')),(0,a.kt)("p",null,"Fired right before loading view and controller when either\nview or controller is async (or both)."),(0,a.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/crysadrak/ima/blob/fb424e0/packages/core/src/router/RouterEvents.ts#L32"},"packages/core/src/router/RouterEvents.ts:32")))}d.isMDXComponent=!0}}]);